# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
name: Create, publish and deploy project

# Deployment requires the following secrets:
# Kubernetes contexts:
# KUBE_CONFIG_DEV
# KUBE_CONFIG_PROD
# Tailscale:
# TS_OAUTH_CLIENT_ID
# TS_OAUTH_SECRET

on:
  push:
    tags: "**"
    branches:
      - "master"
      - "dev"

env:
  REGISTRY: ghcr.io

jobs:
  build-publish-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Downcase GITHUB_REPOSITORY and set as REPO (for docker image name)
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Connect to tailscale network
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Set image on dev cluster
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/dev' }}
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DEV }}
          NAMESPACE: fitness-dev
        with:
          args: -n ${{ env.NAMESPACE }} set image deployment/app app=${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}

      - name: Set image on prod cluster
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_PROD }}
          NAMESPACE: fitness-prod
        with:
          args: -n ${{ env.NAMESPACE }} set image deployment/app app=${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}